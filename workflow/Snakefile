__author__ = "Arielle R. Munters"
__copyright__ = "Copyright 2023, Arielle R. Munters"
__email__ = "arielle.munters@scilifelab.uu.se"
__license__ = "GPL-3"

include: "rules/common.smk"

report: "report/workflow.rst"

rule dummy:
    output:
        "miss_lemon/dummy/{sample}_{type}.dummy.txt"
    params:
        extra=config.get("dummy", {}).get("extra", ""),
    log:
        "miss_lemon/dummy/{sample}_{type}.output.log"
    benchmark:
       repeat("module/dummy/{sample}_{type}.output.benchmark.tsv", config.get("dummy", {}).get("benchmark_repeats", 1),)
    threads: # optional
       threads=config.get("dummy", {}).get("threads", config["default_resources"]["threads"]),
    resources:
        threads=config.get("dummy", {}).get("threads", config["default_resources"]["threads"]),
        time=config.get("dummy", {}).get("time", config["default_resources"]["time"]),
    container:
       config.get("dummy", {}).get("container", config["default_container"])
    conda:
       "../envs/dummy.yaml"
    message:
       "{rule}: Do stuff on module/{rule}/{wildcards.sample}_{wildcards.type}.input"
    shell:
        """
        touch {output}
        """

rule all:
    input:
        unpack(compile_output_list),
